import { z } from 'zod';

export const AuthenticationTokenInput = z.object({
  username: z.string().email(),
  password: z.string(),
});

export const AuthenticationTokenOutput = z.object({
  token: z.string(),
  user: z.object({
    id: z.number(),
    username: z.string(),
    email: z.string().email(),
    enabled: z.boolean(),
    isTest: z.boolean(),
    lastLogin: z.string(),
    passwordRequestedAt: z.unknown().nullable(),
    roles: z.array(z.string()),
    firstname: z.string(),
    lastname: z.string(),
    gender: z.string(),
    phone: z.string(),
    cgvAccepted: z.boolean(),
    validatedAt: z.string(),
    birthdate: z.string(),
    trackingToken: z.unknown().nullable(),
    nationality: z.unknown().nullable(),
    nif: z.unknown().nullable(),
    affiliateProvider: z.object({
      id: z.string(),
      name: z.string(),
      slug: z.string(),
      createdAt: z.string(),
      updatedAt: z.string(),
    }),
    lydiaToken: z.unknown().nullable(),
    origin: z.string(),
    goal: z.unknown().nullable(),
    viewPreference: z.string(),
    investmentAccounts: z.array(
      z.object({
        id: z.string(),
        status: z.string(),
        reference: z.string(),
        watermark: z.number(),
        watermarkedAt: z.string(),
        error: z.unknown().nullable(),
        refusedSource: z.unknown().nullable(),
        providerProjectId: z.string(),
        providerContractId: z.string(),
        statusProvider: z.string(),
        profile: z.string(),
        incompatible: z.boolean(),
        effectiveDate: z.string(),
        nextMonthlyPaymentDate: z.string(),
        lastProviderKycUpdateAt: z.string(),
        provider: z.object({
          id: z.string(),
          name: z.string(),
          slug: z.string(),
          position: z.string(),
          enabled: z.boolean(),
          publicationMode: z.unknown().nullable(),
          publishOn: z.unknown().nullable(),
          unpublishOn: z.unknown().nullable(),
          minimumFirstInvestment: z.string(),
          minimumFirstInvestmentMonthly: z.string(),
          minimumInvestmentMonthly: z.string(),
          walletProvider: z.array(z.unknown()),
          uuid: z.string(),
          createdAt: z.string(),
          updatedAt: z.string(),
        }),
        uuid: z.string(),
        createdAt: z.string(),
        updatedAt: z.string(),
      })
    ),
    language: z.array(z.unknown()),
    universignCertifiedAt: z.string(),
    bankinToken: z.unknown().nullable(),
    crispId: z.string(),
    crispSegments: z.array(z.string()),
    uuid: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
    affiliationLevel: z.string(),
    affiliationAlreadyClientUserCount: z.number(),
    affiliationTotalUserCount: z.number(),
    affiliationSavingsPercent: z.number(),
  }),
});
