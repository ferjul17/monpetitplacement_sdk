import { z } from 'zod';

export const UserInvestmentValuesInput = z.object({
  userInvestmentAccountId: z.number(),
  token: z.string(),
});

export const UserInvestmentValuesOutput = z.object({
  '@context': z.string(),
  '@id': z.string(),
  '@type': z.string(),
  'hydra:member': z.array(
    z.object({
      '@id': z.string(),
      '@type': z.string(),
      id: z.string(),
      type: z.string(),
      date: z.string(),
      amount: z.number(),
      unrealisedAmount: z.number().nullable(),
      averageAcquisitionAmount: z.unknown().nullable(),
      securityUnits: z.unknown().nullable(),
      performance: z.number().nullable(),
      investedAmount: z.number().nullable(),
      product: z.unknown().nullable(),
      userInvestmentAccount: z.string(),
      createdAt: z.string(),
      updatedAt: z.string(),
      userWhoNeedSendinblueAndCrispSync: z.array(
        z.object({
          '@id': z.string(),
          '@type': z.string(),
          id: z.number(),
          username: z.string(),
          email: z.string(),
          enabled: z.boolean(),
          isTest: z.boolean(),
          lastLogin: z.string(),
          passwordRequestedAt: z.unknown().nullable(),
          roles: z.array(z.string()),
          firstname: z.string(),
          lastname: z.string(),
          gender: z.string(),
          phone: z.string(),
          cgvAccepted: z.boolean(),
          validatedAt: z.string(),
          birthdate: z.string(),
          trackingToken: z.unknown().nullable(),
          nationality: z.unknown().nullable(),
          nif: z.unknown().nullable(),
          affiliateProvider: z.object({
            '@id': z.string(),
            '@type': z.string(),
            id: z.string(),
            name: z.string(),
            slug: z.string(),
            defaultCoupon: z.unknown().nullable(),
            createdAt: z.string(),
            updatedAt: z.string(),
          }),
          lydiaToken: z.unknown().nullable(),
          origin: z.string(),
          goal: z.unknown().nullable(),
          viewPreference: z.string(),
          investmentAccounts: z.array(
            z.object({
              '@id': z.string(),
              '@type': z.string(),
              id: z.string(),
              status: z.string(),
              reference: z.string(),
              watermark: z.number(),
              watermarkedAt: z.string(),
              error: z.unknown().nullable(),
              refusedSource: z.unknown().nullable(),
              providerProjectId: z.string(),
              providerContractId: z.string(),
              statusProvider: z.string(),
              profile: z.string(),
              incompatible: z.boolean(),
              acceptedRisk: z.unknown().nullable(),
              effectiveDate: z.string(),
              nextMonthlyPaymentDate: z.string(),
              lastProviderKycUpdateAt: z.string(),
              provider: z.string(),
              user: z.string(),
              duration: z.number(),
              uuid: z.string(),
              createdAt: z.string(),
              updatedAt: z.string(),
            })
          ),
          language: z.array(z.unknown()),
          universignCertifiedAt: z.string(),
          bankinToken: z.unknown().nullable(),
          crispId: z.string(),
          crispSegments: z.array(z.string()),
          uuid: z.string(),
          createdAt: z.string(),
          updatedAt: z.string(),
          affiliationLevel: z.string(),
          affiliationAlreadyClientUserCount: z.number(),
          affiliationTotalUserCount: z.number(),
          affiliationSavingsPercent: z.number(),
        })
      ),
      sendinblueSyncedFields: z.array(z.string()),
      crispSyncedFields: z.unknown().nullable(),
    })
  ),
  'hydra:totalItems': z.number(),
  'hydra:view': z.object({ '@id': z.string(), '@type': z.string() }).optional(),
});
