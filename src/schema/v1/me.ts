import { z } from 'zod';

export const MeInput = z.object({
  token: z.string(),
});

export const MeOutput = z.object({
  '@context': z.string(),
  '@id': z.string(),
  '@type': z.string(),
  id: z.number(),
  username: z.string(),
  email: z.string(),
  isTest: z.boolean(),
  lastLogin: z.string(),
  roles: z.array(z.string()),
  firstname: z.string(),
  lastname: z.string(),
  gender: z.string(),
  phone: z.string(),
  cgvAccepted: z.boolean(),
  validatedAt: z.string(),
  birthdate: z.string(),
  affiliateProvider: z.object({
    '@id': z.string(),
    '@type': z.string(),
    id: z.string(),
    name: z.string(),
    slug: z.string(),
    createdAt: z.string(),
    updatedAt: z.string(),
  }),
  origin: z.string(),
  viewPreference: z.string(),
  investmentAccounts: z.array(
    z.object({
      '@id': z.string(),
      '@type': z.string(),
      id: z.string(),
      status: z.string(),
      reference: z.string(),
      watermark: z.number(),
      watermarkedAt: z.string(),
      providerProjectId: z.string(),
      providerContractId: z.string(),
      statusProvider: z.string(),
      profile: z.string(),
      incompatible: z.boolean(),
      effectiveDate: z.string(),
      nextMonthlyPaymentDate: z.string(),
      lastProviderKycUpdateAt: z.string(),
      provider: z.object({
        '@id': z.string(),
        '@type': z.string(),
        id: z.string(),
        name: z.string(),
        slug: z.string(),
        position: z.string(),
        enabled: z.boolean(),
        minimumFirstInvestment: z.number(),
        minimumFirstInvestmentMonthly: z.number(),
        minimumInvestmentMonthly: z.number(),
        uuid: z.string(),
        createdAt: z.string(),
        updatedAt: z.string(),
      }),
      userKycs: z.array(z.string()),
      uuid: z.string(),
      createdAt: z.string(),
      updatedAt: z.string(),
    })
  ),
  userSensibleData: z.array(
    z.object({
      '@id': z.string(),
      '@type': z.string(),
      iban: z.string(),
      swift: z.string(),
      uuid: z.string(),
    })
  ),
  universignCertifiedAt: z.string(),
  crispId: z.string(),
  crispSegments: z.array(z.string()),
  uuid: z.string(),
  createdAt: z.string(),
  updatedAt: z.string(),
  affiliationLevel: z.string(),
  affiliationAlreadyClientUserCount: z.number(),
  affiliationTotalUserCount: z.number(),
  affiliationSavingsPercent: z.number(),
});
